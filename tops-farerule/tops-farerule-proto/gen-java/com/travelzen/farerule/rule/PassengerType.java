/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.travelzen.farerule.rule;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum PassengerType implements org.apache.thrift.TEnum {
  ADT(0),
  CHD(1),
  INF(2),
  STU(3),
  SEA(4),
  YOU(5),
  LAB(6),
  SCT(7),
  OTH(8);

  private final int value;

  private PassengerType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static PassengerType findByValue(int value) { 
    switch (value) {
      case 0:
        return ADT;
      case 1:
        return CHD;
      case 2:
        return INF;
      case 3:
        return STU;
      case 4:
        return SEA;
      case 5:
        return YOU;
      case 6:
        return LAB;
      case 7:
        return SCT;
      case 8:
        return OTH;
      default:
        return null;
    }
  }
}
