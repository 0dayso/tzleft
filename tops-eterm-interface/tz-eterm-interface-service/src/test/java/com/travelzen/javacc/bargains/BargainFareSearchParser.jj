PARSER_BEGIN(BargainFareSearchParser)package com.travelzen.javacc.bargains;import java.io.*;public class BargainFareSearchParser{  public static void parseString(String str) throws Exception  {    InputStream in = new ByteArrayInputStream(str.getBytes("UTF-8"));    BargainFareSearchParser parser = new BargainFareSearchParser(in);    parser.start();  }  public static void main(String[] args) throws Exception{//     BufferedReader reader = new BufferedReader(new FileReader(new File(BargainFareSearchParser.class.getClassLoader().getResource("").getPath() + "javacc/bargains/bargain.txt")));     BufferedReader reader = new BufferedReader(new FileReader(new File(BargainFareSearchParser.class.getClassLoader().getResource("").getPath() + "javacc/bargains/a.txt")));            String line;            String rs = "";            while ((line = reader.readLine()) != null) {                rs = rs + line + "\u005cr";            }            InputStream in = new ByteArrayInputStream(rs.getBytes("UTF-8"));            BargainFareSearchParser parser = new BargainFareSearchParser(in);            parser.start();  }}PARSER_END(BargainFareSearchParser)SKIP :{ " " |"\r" |"\n" |"\t" |">"}/***VT，若干基本符号，不需要进一步定义；*VN，一系列需要定义的语法范畴；*S， 是文法的开始符号，S∈VN；*P，用“->“连接起来的有序对(A,α)的集合，称为规则，也叫产生式。其中A是一个非终结符，α是一个由终结符或非终结符组成的符号串，即α∈(VN∪VT)*。*此外 ，我们还将出现在产生式左、右侧的全部符号的集合称为词汇表，记为V。显然：V=VN∪VT；VN∩VT =φ。*/TOKEN :{  <S : "NFD" >  |<VT1:"\\d\\d">  |<VT2 : ["0"-"9", "A"-"Z"]["0"-"9", "A"-"Z"]([ "0"-"9", "A"-"Z","/"])* >}/** Root production. */void start() :{    Token token=null;}{  (token=<S>)    {        if(token!=null){            System.out.println(token.image);        }      }  (token=<VT2>)  {      if(token!=null){          System.out.println(token.image);      }    }   (token=<VT2>)    {        if(token!=null){            System.out.println(token.image);        }      }   (token=<VT2>)    {        if(token!=null){            System.out.println(token.image);        }      }}